// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_PRISMA_URL")
  directUrl = env("DATABASE_URL_NON_POOLING")
}

enum UserRole {
  ADMIN
  STAFF
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  username String   @unique
  password String
  role     UserRole @default(STAFF)

  productStockReports  ProductStockHistory[]
  materialStockReports MaterialStockHistory[]
  reportedSales        Sales[]                @relation("reporter")
  updatedSales         Sales[]                @relation("lastUpdatedBy")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id           String  @id @default(cuid())
  name         String
  price        Decimal
  minimumStock Decimal

  stockHistories ProductStockHistory[]
  sales          Sales[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductStockHistory {
  id           String  @id @default(cuid())
  currentStock Decimal

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId String

  reporter   User @relation(fields: [reporterId], references: [id], onUpdate: Cascade)
  reporterId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum MaterialUnit {
  KILOGRAM
  GRAM
  LITER
}

model Material {
  id           String       @id @default(cuid())
  name         String
  minimumStock Decimal
  unit         MaterialUnit

  stockHistories MaterialStockHistory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MaterialStockHistory {
  id           String  @id @default(cuid())
  currentStock Decimal

  material   Material @relation(fields: [materialId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  materialId String

  reporter   User @relation(fields: [reporterId], references: [id], onUpdate: Cascade)
  reporterId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum PurchaseSystem {
  PRE_ORDER
  READY
}

model Sales {
  id             String         @id @default(cuid())
  amount         Decimal
  purchaseSystem PurchaseSystem

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId String

  reporter   User @relation(fields: [reporterId], references: [id], onUpdate: Cascade, name: "reporter")
  reporterId Int

  lastUpdatedBy   User @relation(fields: [lastUpdatedById], references: [id], onUpdate: Cascade, name: "lastUpdatedBy")
  lastUpdatedById Int

  occurredAt DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
